@*@page "/dataFilter"
@using Microsoft.EntityFrameworkCore
@using OTBIS.Web.Data.W5DataObjectsStaging
@inject StagingDbcontext _StagingDbcontext;



<h3>DataFilter</h3>
 <RadzenExample Name="DataFilter" AdditionalSourceCodePages=@(new List<string>() { "MyCustomDataFilterProperty.razor" }) Documentation="false">
  <div class="container-fluid">
    <div class="row">
        <div class="col">
             <RadzenCard class="mb-3" style="display: flex; align-items: center; gap: 0.5rem">
                    <RadzenCheckBox @bind-Value="@auto" Name="auto" />
                <RadzenLabel Text="Auto filter" Component="auto" Style="margin-left: 8px; margin-right: 32px; vertical-align: middle;" />
                <RadzenButton Text="Apply Filter" Click="@(args => dataFilter.Filter())" Disabled="@auto" />
            </RadzenCard>
        </div>
    </div>
  </div>
   </RadzenExample>


@code {

    bool auto = true;
    RadzenDataFilter<Order> dataFilter;

    IList<Order> filteredOrders;
    IList<Order> orders;
    RadzenDataGrid<Order> ordersGrid;

    IEnumerable<int> selectedIds;
    IEnumerable<int> orderIds;

    void OnSelectedIdsChange(object value)
    {
        if (selectedIds != null && !selectedIds.Any())
        {
            selectedIds = null;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        orders = dbcontext.Orders.Include("Customer").Include("Employee").ToList();
        orderIds = orders.Select(o => o.OrderID).Distinct();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await dataFilter.AddFilter(new CompositeFilterDescriptor()
                {
                    Property = "Employee.LastName",
                    FilterValue = "Buchanan",
                    FilterOperator = FilterOperator.contains
                });
        }
    }
   

}

*@