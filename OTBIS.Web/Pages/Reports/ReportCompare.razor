@page "/Reports/ReportCompare"
@using OTBIS.Web.Services
@inject StagingDbContext _StagingDbContext;
@inject ComparedOnService _ComparedOnService;
@inject PopulateDropdownService _populateDropdownService;
@inject GetProductionService _getProductionService;

@if (CompareOnList== null || numberToCompare == null  )
{
    <div class="spinner"></div>
}
else{
<container>
    <row>
        <div class="rep text-center">
            <h1>REPORT</h1>
        </div>
    </row>
    <div class="rz-border-primary-darker"><span></span>
         <RadzenTemplateForm TItem="RunReport" Data=@report Submit=@OnSubmit>
             
             <div class="container-fluid">
                  
                 
              <div class="rz-border-primary-darker"><span></span>
                <div class="row mt-2">
                        <div class="form-group col-sm-4">
                         
                                <RadzenText TextStyle="TextStyle.Subtitle1">Select Number of Comparisons </RadzenText>
                                @*  <label for="Number">Select Number of Comparisons</label>*@
                                <RadzenDropDown Style="Display:grid;"  Data=@numberList class="w-100" @bind-Value=@numberToCompare
                                            TextProperty="name" ValueProperty="number" />
                       </div>
                       
                        <div class="form-group col-sm-4">

                              <RadzenText TextStyle="TextStyle.Subtitle1">Select Comparison Field </RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@CompareOnList @bind-Value=@compareOnId
                                            TextProperty="ComparedOnName" ValueProperty="ComparedOnId" />
                      </div>
                </div>
              </div>

             </div>

        <div class="container-fluid">
             <div class="rz-border-primary-darker"><span></span>
                <div class="row mt-2">
                    <div class="form-group col-sm-4">
                        <label for="Domain">*Domain</label>
                            <RadzenDropDown Style="Display:grid;" Data=@domainsList Change="@OnChangeDomain" @bind-Value=selectedDomId
                                        TextProperty="DomainName" ValueProperty="DomainId" />

                    </div>
             </div>
                    @if (compareOnId >=1 && numberToCompare ==2 )
                    {<div class="d-flex flex-row p-5">
                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList Change="@OnChangeDomain"@bind-Value=@selectedDomId2 
                        TextProperty="DomainName" ValueProperty="DomainId" />
                        </div>
                    }
                    @if (compareOnId >=1 && numberToCompare == 3)
                    {
                        <div class="d-flex flex-row p-5">
                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList @bind-Value=@selectedDomId2
                            TextProperty="DomainName" ValueProperty="DomainId" />

                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList @bind-Value=@selectedDomId3
                            TextProperty="DomainName" ValueProperty="DomainId" />
                        </div>
                    }
                    <div class="row mt-2">

                        <div class="form-group col-sm-4">
                            <label for="Department">Department</label>
                            <RadzenDropDown Style="Display:grid;" Name="DepartmentDrop" Data=@departmentsList  Change="@OnChangeDepartment" @bind-Value="selectedDeptId"
                                            TextProperty="DepartmentName" ValueProperty="DepartmentId" />

                        </div>
                        @if (compareOnId >= 1 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId2
                                 TextProperty="DepartmentName" ValueProperty="DepartmentId" />
                            </div>
                        }
                        @if (compareOnId >= 2 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId2 
                                 TextProperty="DepartmentName" ValueProperty="DepartmentId" />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId3 
                                 TextProperty="DepartmentName" ValueProperty="DepartmentId" />
                            </div>
                        }

                        <div class="form-group col-sm-4">
                            <label for="Category">Category</label>
                            <RadzenDropDown Style="Display:grid;" Name="CategoryDrop"  Data=@categoriesList  Change="@OnChangeCategory" @bind-Value="selectedCatId"
                                            TextProperty="CategoryName" ValueProperty="CategoryId" />

                        </div>
                        @if (compareOnId >= 3 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId2 />
                            </div>
                        }
                        @if (compareOnId >= 3 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId2 />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId3 />
                            </div>
                        }


                    </div>
                    <div class="row mt-2">
                        <div class="form-group col-sm-4">
                            <label for="Sub-Category">Sub-Category</label>
                            <RadzenDropDown Style="Display:grid;" Name="SubCategoryDrop" Data=@subCategoriesList Change="@OnChangeSubCat" @bind-Value="selectedSubCatId"
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryId" />

                        </div>
                        @if (compareOnId >= 4 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd SubCatagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId2 
                                    TextProperty="SubCategoryName" ValueProperty="SubCategoryId"/>
                            </div>
                        }
                        @if (compareOnId >= 4 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd SubCatagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId2 
                                    TextProperty="SubCategoryName" ValueProperty="SubCategoryId"/>

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd SubCatagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId3
                                    TextProperty="SubCategoryName" ValueProperty="SubCategoryId"/>
                            </div>
                        }
                        <div class="form-group col-sm-4">
                            <label for="items">Items</label>
                            <RadzenDropDown Style="Display:grid;" Name="ItemDrop" Data=@itemsList @bind-Value="selectedItemid"
                                            TextProperty="ItemDescription" ValueProperty="ItemId" />

                        </div>
                            @if (compareOnId == 6 && numberToCompare == 2 || compareOnId >= 4 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Item</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid2 
                                  TextProperty="ItemDescription" ValueProperty="ItemId"/>
                            </div>
                        }
                        @if (compareOnId == 6 && numberToCompare == 3 || compareOnId >= 4 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Item</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid2 
                                  TextProperty="ItemDescription" ValueProperty="ItemId"/>

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Item</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid3
                                  TextProperty="ItemDescription" ValueProperty="ItemId"/>
                            </div>
                        }
                    </div>
                </div>

                <div class="rz-border-primary-darker">
                    <div class="row mt-2">

                        <span></span>
                        <div class="col-lg-6 col-xl-4 p-3">

                            <RadzenCard>
                                <RadzenText TextStyle="TextStyle.Subtitle2"  Name="Transaction StartDate"> @DateName Start Date</RadzenText>
                                <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"  
                                Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedStartDate" />
                            </RadzenCard>
                        </div>
                        <div class="col-lg-6 col-xl-4 p-3">

                            <RadzenCard>
                                <RadzenText TextStyle="TextStyle.Subtitle2" Name="Transaction EndDate">@DateName End Date</RadzenText>
                                <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today" 
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedEndDate" />
                            </RadzenCard>
                        </div>
                        <div class="form-group col-sm-4">

                            <RadzenText TextStyle="TextStyle.Subtitle1">Other Date Types</RadzenText>
                            @*  <label for="Number">Select Number of Comparisons</label>*@
                            <RadzenDropDown Style="Display:grid;" TValue="string" Data=@dateTypesList class="w-100" @bind-Value=@dateType
                                        Change=@(args => OnChangeDateType()) />

                        </div>
                        @if (compareOnId == 17 && numberToCompare == 2)
                        {
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate2">Second @DateName Start Date</RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedStartDate2" />
                                </RadzenCard>
                            </div>
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name="2nd EndDate">@DateName End Date</RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedEndDate2" />
                                </RadzenCard>
                            </div>

                        }
                        @if (compareOnId == 17 && numberToCompare == 3)
                        {
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate2">2nd @DateName Start Date</RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedStartDate2" />
                                </RadzenCard>
                            </div>
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name=" EndDate2">2nd @DateName End Date</RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedEndDate2" />
                                </RadzenCard>
                            </div>
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate3"> 3rd @DateName Start Date </RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedStartDate3" />
                                </RadzenCard>
                            </div>
                            <div class="col-lg-6 col-xl-4 p-3">

                                <RadzenCard>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Name="Transaction EndDate">3rd @DateName End Date</RadzenText>
                                    <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                                                  Change=@(args => OnChange(args, "DatePicker with minimum and maximum dates", "MM/dd/yyyy")) Class="w-100"
                                                  @bind-Value="selectedEndDate3" />
                                </RadzenCard>
                            </div>
                        }
                    </div>


                    <div class="row mt-2">
                        @*     <div class="form-group col-sm-4">
                        <label for="TransSellingPr">Transaction Selling Price</label>
                        <RadzenDropDown Style="Display:grid;" Name="TransSellingPriceDrop"  Data=@subCategoriesList  Change="@OnChangeCategory" @bind-Value="report.SubCategoryId"
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryID" />

                    </div>*@
                        @*<div class="form-group col-sm-4">
                        <label for="TransNetAmount">Transaction Net Amount</label>
                        <RadzenDropDown Style="Display:grid;" Name="TransNetAmountDrop" TValue="int?" Data=@categoriesList TextProperty="CategoryName" ValueProperty="CategoryID" Change="@OnChangeCategory" @bind-Value="report.CategoryId" />

                    </div>
                    <div class="form-group col-sm-4">
                        <label for="TransTotalPr">Transaction Total Price</label>
                        <RadzenDropDown Style="Display:grid;" Name="TransactionTotalPriceDrop" TValue="int?" Data=@subCategoriesList TextProperty="SubCategoryName" ValueProperty="SubCategoryID" Change="@OnChangeCategory" @bind-Value="report.SubCategoryId" />

                    </div>*@

                    </div>

                    <div class="row mt-2">
                        <div class="form-group col-sm-4">
                            <label for="paymenttype">Payment Type</label>
                            <RadzenDropDown Style="Display:grid;" Name="PaymentTypeDrop"  Data=@paymentTypeList   @bind-Value="selectedPaymentTypeId"
                                            TextProperty="PaymentTypeDescription" ValueProperty="PaymentTypeId" />

                        </div>
                        @if (compareOnId == 10 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Payment Type</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@FL2 @bind-Value=@selectedPaymentTypeId2
                                 TextProperty="PaymentTypeDescription" ValueProperty="PaymentTypeId"/>
                            </div>
                        }
                        @if (compareOnId == 10 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Payment Type</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@FL2 @bind-Value=@selectedPaymentTypeId2
                                 TextProperty="PaymentTypeDescription" ValueProperty="PaymentTypeId2"/>

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Payment Type</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@FL3 @bind-Value=@selectedPaymentTypeId3
                                 TextProperty="PaymentTypeDescription" ValueProperty="PaymentTypeId"/>
                            </div>
                        }
                        <div class="form-group col-sm-4">
                            <label for="discount">Discount</label>
                            <RadzenDropDown Style="Display:grid;" Name="DiscountDrop" Data=@discountsList @bind-Value="selectedDiscountId"
                                            TextProperty="DiscountDescription" ValueProperty="DiscountId" />

                        </div>
                        @if (compareOnId == 5 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Discount</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@discountsList @bind-Value=@selectedDiscountId2
                                TextProperty="DiscountDescription" ValueProperty="DiscountId"/>
                            </div>
                        }
                        @if (compareOnId == 5 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Discount</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@discountsList @bind-Value=@selectedDiscountId2
                                TextProperty="DiscountDescription" ValueProperty="DiscountId"/>

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Discount</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@discountsList @bind-Value=@selectedDiscountId3
                                TextProperty="DiscountDescription" ValueProperty="DiscountId"/>
                            </div>
                        }

                        <div class="form-group col-sm-4">
                            <label for="till">Till</label>
                            <RadzenDropDown Style="Display:grid;" Name="TillDrop" Data=@tillList  @bind-Value="selectedTillid"
                                            TextProperty="Name" ValueProperty="TillId" />

                        </div>
                        @if (compareOnId == 13 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Till</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@tillList @bind-Value=@selectedTillid2 />
                            </div>
                        }
                        @if (compareOnId == 13 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Till</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@tillList @bind-Value=@selectedTillid2 />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Till</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@tillList @bind-Value=@selectedTillid3 />
                            </div>
                        }
                        <div class="form-group col-sm-4">
                            <label for="clerk"> Clerk</label>
                            <RadzenDropDown Style="Display:grid;" Name="ClerkDrop" Data=@clerkList @bind-Value="selectedClerkId"
                                            TextProperty="ClerkName" ValueProperty="ClerkID" />

                        </div>
                        @if (compareOnId == 14 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Clerk</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@clerkList @bind-Value=@selectedClerkId2
                                TextProperty="ClerkName" ValueProperty="ClerkID" />
                            </div>
                        }
                        @if (compareOnId == 14 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Clerk</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@clerkList @bind-Value=@selectedClerkId2
                                TextProperty="ClerkName" ValueProperty="ClerkID" />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Clerk</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@clerkList @bind-Value=@selectedClerkId3
                                TextProperty="ClerkName" ValueProperty="ClerkID" />
                            </div>
                        }
                        <div class="form-group col-sm-4">
                            <label for="nominal code">nominal code</label>
                            <RadzenDropDown Style="Display:grid;" Name="NominalDrop"  Data=@nominalCodesList  Change="@OnChangeCategory" @bind-Value="selectedNominalCodeId"
                                            TextProperty="NominalCodeDescription" ValueProperty="NominalCodeId" />

                        </div>
                        @if (compareOnId == 9 && numberToCompare == 2)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Nominal</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@nominalCodesList @bind-Value=@selectedNominalCodeId2 
                                TextProperty="NominalCodeDescription" ValueProperty="NominalCodeId"/>
                            </div>
                        }
                        @if (compareOnId == 9 && numberToCompare == 3)
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Nominal</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@nominalCodesList @bind-Value=@selectedNominalCodeId2 
                                TextProperty="NominalCodeDescription" ValueProperty="NominalCodeId"/>

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Nominal</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@nominalCodesList @bind-Value=@selectedNominalCodeId3
                                TextProperty="NominalCodeDescription" ValueProperty="NominalCodeId"/>
                            </div>
                        }
                        <button type="button" @onclick="@OnSubmit" class="btn btn-primary">Run Report</button>



                    </div>
                </div>
            </div>
        </RadzenTemplateForm>
    </div>

    <div>

    </div>

</container>
}


@code {
    List<NumberList> numberList;
    List<ComparedOn> CompareOnList;
    ComparedOn _comparedOn;
    int compareOnId;
    int numberToCompare;
    string dateType;
    string str1;
    string str2;
    string str3;
    string DateName;
    List<string> FL1;
    List<string> FL2;
    List<string> FL3;
    bool spinner;

    RunReport _storedReport1;

    RunReport report = new RunReport();
    int selectedDomId = 0;
    int selectedDomId2 = 0;
    int selectedDomId3 = 0;
    int selectedDeptId = 0;
    int selectedDeptId2 = 0;
    int selectedDeptId3 = 0;
    int selectedCatId = 0;
    int selectedCatId2 = 0;
    int selectedCatId3 = 0;
    int selectedSubCatId = 0;
    int selectedSubCatId2 = 0;
    int selectedSubCatId3 = 0;
    int selectedItemid = 0;
    int selectedItemid2 = 0;
    int selectedItemid3 = 0;
    int selectedNominalCodeId = 0;
    int selectedNominalCodeId2 = 0;
    int selectedNominalCodeId3 = 0;
    int selectedSellingPriceId = 0;
    int selectedSellingPriceId2 = 0;
    int selectedPaymentTypeId = 0;
    int selectedPaymentTypeId2 = 0;
    int selectedPaymentTypeId3 = 0;
    int selectedDiscountId = 0;
    int selectedDiscountId2 = 0;
    int selectedDiscountId3 = 0;
    int selectedTillid = 0;
    int selectedTillid2 = 0;
    int selectedTillid3 = 0;
    int selectedClerkId = 0;
    int selectedClerkId2 = 0;
    int selectedClerkId3 = 0;
    DateTime selectedStartDate;
    DateTime selectedEndDate;
    DateTime selectedStartDate2;
    DateTime selectedEndDate2;
    DateTime selectedStartDate3;
    DateTime selectedEndDate3;

    List<Domain> domainsList;
    Domain _domain;
    IEnumerable<Department> departmentsList;
    Department _department;
    IEnumerable<Category> categoriesList;
    Category _category;
    IEnumerable<SubCategory> subCategoriesList;
    SubCategory _subCategory;
    IEnumerable<Item> itemsList;
    Item _item;
    IEnumerable<NominalCode> nominalCodesList;
    NominalCode _nominalCode;
    IEnumerable<Discount> discountsList;
    Discount _discount;
    IEnumerable<Status> statusesList;
    Status _status;
    IEnumerable<PaymentType> paymentTypeList;
    PaymentType _paymentType;
    IEnumerable<Till> tillList;
    Till _till;
    IEnumerable<Clerk> clerkList;
    Clerk _clerk;
    DateTime dateRangeStart = new DateTime();
    DateTime? value = DateTime.Now;
    DateTime[] dates;

    List<string> dateTypesList;

    protected override void OnInitialized()
    {
        spinner = true;
        _domain = new Domain();
        departmentsList = new List<Department>();
        _department = new Department();
        categoriesList = new List<Category>();
        _category = new Category();
        subCategoriesList = new List<SubCategory>();
        _subCategory = new SubCategory();
        _nominalCode = new NominalCode();
        discountsList = new List<Discount>();
        itemsList = new List<Item>();
        _item = new Item();
        numberList = new List<NumberList>();
        dateTypesList = new List<string>();
        CompareOnList = new List<ComparedOn>();
        _comparedOn = new ComparedOn();
        numberToCompare = 0;
        dateType = "Transaction";
        DateName = "Transaction";
        clerkList = new List<Clerk>(); 
        statusesList = new List<Status>();
        dateRangeStart = new DateTime();
        _storedReport1 = new RunReport();
        domainsList = new List<Domain>();
    }

    protected override async Task OnInitializedAsync()
    {

        numberList.Add(new NumberList
        {
            name= "one",
            number = 1,
        });
        numberList.Add(new NumberList
        {
            name = "two",
            number = 2,
        });

        numberList.Add(new NumberList
            {
                name = "three",
                number = 3,
            });
        

        CompareOnList =  await _ComparedOnService.GetComparedOnsAsync();

        dateTypesList.Add("Booking Date");
        dateTypesList.Add("Visit Date");


        domainsList = await _populateDropdownService.GetDomains();
        domainsList = domainsList.OrderByDescending(c => c.DomainName).ToList();
       // nominalCodesList = await _populateDropdownService.GetNominalCodes();
        tillList =  await _populateDropdownService.GetTills();
        paymentTypeList = await _populateDropdownService.GetPaymentTypes();


       // getting earliest date in transaction data
        dateRangeStart = await _populateDropdownService.getDateStart();
        dateRangeStart.AddDays(-1);
        DateTime today = DateTime.Now;
        TimeSpan daysMinus = today - dateRangeStart;
        dates = new DateTime[] { DateTime.Today.AddDays(-daysMinus.Days), DateTime.Today.AddDays(1) };
        //spinner = true;
    }

    protected async Task OnChangeDomain(object value)
    {
        departmentsList = await _populateDropdownService.GetDepartmentsinDomain(selectedDomId);
        departmentsList = departmentsList.OrderBy(c => c.DepartmentName).ToList();
        discountsList = await _populateDropdownService.GetDiscoutDescpriptionInDomain(selectedDomId);
        discountsList = discountsList.OrderBy(c => c.DiscountDescription).ToList();
        clerkList = await _populateDropdownService.GetClerks(selectedDomId);
        clerkList = clerkList.OrderBy(c => c.ClerkName).ToList();
    }


    protected  async Task OnChangeDepartment(object value)
    {
        categoriesList = await _populateDropdownService.GetCategoriesInDepartment(selectedDeptId);
        categoriesList = categoriesList.OrderBy(c => c.CategoryName).ToList();
    }
    protected async Task OnChangeCategory(object value)
    {
        subCategoriesList = await _populateDropdownService.GetSubCategoriesInCatagories(selectedCatId);
        subCategoriesList = subCategoriesList.OrderBy(c => c.SubCategoryName).ToList();
    }

    protected async Task OnChangeSubCat(object value)
    {
        itemsList =  await _populateDropdownService.GetIteminSubCat(selectedSubCatId);
        itemsList = itemsList.OrderBy(c => c.ItemDescription);

    }

    void OnChangeDateType() {
        if (dateType == "")
        {
            dateType = "Transaction";
            DateName = dateType;
        }
        else
        {
            DateName = dateType;
        }

    }
    void OnClick(string buttonname)
    {
    }

    bool busy;
    async Task OnBusyClick()
    {
        busy = true;
        await Task.Delay(2000);
        busy = false;
    }

    void OnChange(DateTime? value, string StartDate, string format)
    {

    }

       
    void DateRenderSpecial(DateRenderEventArgs args)
    {
        {
            if (dates.Contains(args.Date))
            args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || dates.Contains(args.Date);
    }

    void OnTodayClick()
    {
        value = DateTime.Now;
    }

    async Task OnSubmit()
    {


        //if (selectedDomId == 0)
        //{
        //    // send error must select a domain
        //}
        //if (selectedStartDate == DateTime.MinValue)
        //{
        //    // send error - please select a start date
        //}
        //if (selectedEndDate == DateTime.MinValue)
        //{
        //    // send error - please select an end date
        //}
        //if (numberToCompare == "1")
        //{

        //    @StoreReport()
        //    ;
        //}
        //if(numberToCompare == "1")
        //{
        //    _storedReport1. = selectedDomId.;
        //    _storedReport1.CategoryId = selectedCatId;


        //}

        //check what not required parameters are enter
        //if (numberToCompare == "1")
        //{
        //switch (selectedDomId, selectedDeptId, selectedCatId, selectedSubCatId, selectedItemid,
        //selectedDiscountId, selectedNominalCodeId, selectedClerkId, selectedPaymentTypeId, selectedTillid)
        //{
        //    //domain only
        //    case (> 0, 0, 0, 0, 0,
        //        0, 0, 0, 0, 0):
        //        // code block

        //        break;

        //        //domain and dept
        //    case (> 0, > 0, 0, 0, 0,
        //        0, 0, 0, 0, 0):
        //        // code block
        //        break;

        //        //dom, dept, cat
        //    case ( > 0, > 0, > 0, 0, 0,
        //        0, 0, 0, 0, 0):
        //        // code block
        //        break;

        //        //dom, dept, cat, subcat
        //    case ( > 0, > 0, > 0, > 0, 0,
        //        0, 0, 0, 0, 0):
        //        // code block
        //        break;

        //            //dom, dept, cat, subcat, item
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        0, 0, 0, 0, 0):
        //        // code block
        //        break;

        //        //dom dep, cat, subcat, item,
        //        //disc,
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        > 0, 0, 0, 0, 0):
        //        // code block
        //        break;

        //          //dom dep, cat, subcat, item,
        //        //disc, nom
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        > 0, > 0, 0, 0, 0):
        //        // code block
        //        break;

        //         //dom dep, cat, subcat, item,
        //        //disc, nom, clerk
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        > 0, > 0,  > 0, 0, 0):
        //        // code block
        //        break;

        //           //dom dep, cat, subcat, item,
        //        //disc, nom, clerk, paymentType
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        > 0, > 0,  > 0, > 0, 0):
        //        // code block
        //        break;

        //            //dom dep, cat, subcat, item,
        //        //disc, nom, clerk, paymentType, till
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //        > 0, > 0,  > 0, > 0, > 0):
        //        // code block
        //        break;


        //         //dom dep, cat, subcat, item,
        //        // nom
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //         0, > 0, 0, 0, 0):
        //        // code block
        //        break;

        //          //dom dep, cat, subcat, item,
        //        // clerk
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //         0, 0, > 0, 0, 0):
        //        // code block
        //        break;

        //    //dom dep, cat, subcat, item,
        //    // paytype
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //         0, 0, 0, > 0, 0):
        //        // code block
        //        break;

        //           //dom dep, cat, subcat, item,
        //        // till
        //    case ( > 0, > 0, > 0, > 0, > 0,
        //         0, 0, 0, 0, > 0):
        //        // code block
        //        break;

        //    default:
        //        // code block
        //        // error message
        //        break;
        //}

          
            
             //var result = await _getProductionService.GetAllTransByDomainAsyncbyDate(selectedDomId, selectedStartDate, selectedEndDate);
        }  
        
    
    void StoreReport()
    {

        // check if exists

    }
 }
