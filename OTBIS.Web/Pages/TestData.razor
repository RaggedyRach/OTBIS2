@page "/TestData"
@inject DialogService DialogService
@using System.Globalization
@using OTBIS.Web.Services
@inject PopulateDropdownService _populateDropdownService;
@inject StagingDbContext _StagingDbContext;
@inject ComparedOnService _ComparedOnService;
@inject GetProductionService _getProductionService;


@if (CompareOnList == null || numberToCompare == null)
{
    <div class="spinner"></div>
}
else
{
    <container>

        <row>
            <div class="rep text-center">
                <h1>REPORT</h1>
            </div>
        </row>


        <RadzenTemplateForm TItem="RunReport" Data=@report Submit=@OnSubmit>
            <div class="container-fluid">


                <div class="rz-border-primary-darker">
                    <span></span>
                    <div class="row mt-2">
                        <div class="form-group col-sm-4">

                            <RadzenText TextStyle="TextStyle.Subtitle1">Select Number of Comparisons </RadzenText>
                            @*  <label for="Number">Select Number of Comparisons</label>*@
                            <RadzenDropDown Style="Display:grid;" TValue="string" Data=@numberList class="w-100" @bind-Value=@numberToCompare />
                        </div>
                        <div class="form-group col-sm-4">

                            <RadzenText TextStyle="TextStyle.Subtitle1">Select Comparison Field </RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@CompareOnList @bind-Value=@compareOnId
                                        TextProperty="ComparedOnName" ValueProperty="ComparedOnId" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="container-fluid">
                <div class="rz-border-primary-darker">
                    <span></span>
                    <div class="row mt-2">
                        <div class="form-group col-sm-4">
                            <label for="Domain">*Domain</label>
                            <RadzenDropDown Style="Display:grid;" Data=@domainsList Change="@OnChangeDomain" @bind-Value=selectedDomId
                                        TextProperty="DomainName" ValueProperty="DomainId" />

                        </div>
                    </div>

                    @if (compareOnId == 1 && numberToCompare == "2")
                    {
                        <div class="d-flex flex-row p-5">
                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList @bind-Value=@selectedDomId2
                                    TextProperty="DomainName" ValueProperty="DomainId" />
                        </div>
                    }
                    @if (compareOnId == 1 && numberToCompare == "3")
                    {
                        <div class="d-flex flex-row p-5">
                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList @bind-Value=@selectedDomId2
                                    TextProperty="DomainName" ValueProperty="DomainId" />

                            @*<label for="Comparison">Select Comparison Field</label>*@
                            <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Domain</RadzenText>

                            <RadzenDropDown Style="Display:grid;" Data=@domainsList @bind-Value=@selectedDomId3
                                    TextProperty="DomainName" ValueProperty="DomainId" />
                        </div>
                    }

                    <div class="row mt-2">

                        <div class="form-group col-sm-4">
                            <label for="Department">Department</label>
                            <RadzenDropDown Style="Display:grid;" Name="DepartmentDrop" Data=@departmentsList Change="@OnChangeDepartment" @bind-Value="selectedDeptId"
                                        TextProperty="DepartmentName" ValueProperty="DepartmentId" />

                        </div>
                        @if (compareOnId == 2 && numberToCompare == "2")
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId2
                                        TextProperty="DepartmentName" ValueProperty="DepartmentId" />
                            </div>
                        }
                        @if (compareOnId == 2 && numberToCompare == "3")
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId2
                                        TextProperty="DepartmentName" ValueProperty="DepartmentId" />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Department</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@departmentsList @bind-Value=@selectedDeptId3
                                        TextProperty="DepartmentName" ValueProperty="DepartmentId" />
                            </div>
                        }
                        <div class="form-group col-sm-4">
                            <label for="Category">Category</label>
                            <RadzenDropDown Style="Display:grid;" Name="CategoryDrop" Data=@categoriesList Change="@OnChangeCategory" @bind-Value="selectedCatId"
                                        TextProperty="CategoryName" ValueProperty="CategoryId" />

                        </div>
                        @if (compareOnId == 3 && numberToCompare == "2")
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId2
                                        TextProperty="CategoryName" ValueProperty="CategoryId" />
                            </div>
                        }
                        @if (compareOnId == 3 && numberToCompare == "3")
                        {
                            <div class="d-flex flex-row p-5">
                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId2
                                        TextProperty="CategoryName" ValueProperty="CategoryId" />

                                @*<label for="Comparison">Select Comparison Field</label>*@
                                <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Catagory</RadzenText>

                                <RadzenDropDown Style="Display:grid;" Data=@categoriesList @bind-Value=@selectedCatId3
                                        TextProperty="CategoryName" ValueProperty="CategoryId" />
                            </div>
                        }
                        <div class="row mt-2">
                            <div class="form-group col-sm-4">
                                <label for="Sub-Category">Sub-Category</label>
                                <RadzenDropDown Style="Display:grid;" Name="SubCategoryDrop" Data=@subCategoriesList Change="@OnChangeSubCat" @bind-Value="selectedSubCatId"
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryId" />

                            </div>
                            @if (compareOnId == 4 && numberToCompare == "2")
                            {
                                <div class="d-flex flex-row p-5">
                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd SubCatagory</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId2
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryId" />
                                </div>
                            }
                            @if (compareOnId == 4 && numberToCompare == "3")
                            {
                                <div class="d-flex flex-row p-5">
                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd SubCatagory</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId2
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryId" />

                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd SubCatagory</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@subCategoriesList @bind-Value=@selectedSubCatId3
                                            TextProperty="SubCategoryName" ValueProperty="SubCategoryId" />
                                </div>
                            }
                            <div class="form-group col-sm-4">
                                <label for="items">Items</label>
                                <RadzenDropDown Style="Display:grid;" Name="ItemDrop" Data=@itemsList @bind-Value="selectedItemid"
                                            TextProperty="ItemDescription" ValueProperty="ItemId" />

                            </div>
                            @if (compareOnId == 6 && numberToCompare == "2")
                            {
                                <div class="d-flex flex-row p-5">
                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Item</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid2
                                            TextProperty="ItemDescription" ValueProperty="ItemId" />
                                </div>
                            }
                            @if (compareOnId == 6 && numberToCompare == "3")
                            {
                                <div class="d-flex flex-row p-5">
                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 2nd Item</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid2
                                            TextProperty="ItemDescription" ValueProperty="ItemId" />

                                    @*<label for="Comparison">Select Comparison Field</label>*@
                                    <RadzenText TextStyle="TextStyle.Subtitle1">Choose 3rd Item</RadzenText>

                                    <RadzenDropDown Style="Display:grid;" Data=@itemsList @bind-Value=@selectedItemid3
                                            TextProperty="ItemDescription" ValueProperty="ItemId" />
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </div>


            <div class="rz-border-primary-darker">
                <div class="row mt-2">

                    <span></span>
                    <div class="col-lg-6 col-xl-4 p-3">

                        <RadzenCard>

                            <RadzenText TextStyle="TextStyle.Subtitle2" Name="Transaction StartDate"> @DateName Start Date</RadzenText>
                            <RadzenDatePicker Min="dateRangeStart.AddDays(-1)" Max="DateTime.Today"
                                           Class="w-100"
                                          @bind-Value="selectedStartDate" />
                        </RadzenCard>
                    </div>
                    <div class="col-lg-6 col-xl-4 p-3">

                        <RadzenCard>
                            <RadzenText TextStyle="TextStyle.Subtitle2" Name="Transaction EndDate">@DateName End Date</RadzenText>
                            @*   <RadzenDatePicker Min="DateTime.Today" Max="DateTime.Today"
                        Class="w-100"
                        @bind-Value="selectedEndDate" />*@
                        </RadzenCard>
                    </div>
                    <div class="form-group col-sm-4">

                        @*  <RadzenText TextStyle="TextStyle.Subtitle1">Other Date Types</RadzenText>
                    @*  <label for="Number">Select Number of Comparisons</label>*@
                        @*  <RadzenDropDown Style="Display:grid;" TValue="string" Data=@dateTypesList class="w-100" @bind-Value=@dateType
                    Change=@(args => OnChangeDateType()) />*@

                    </div>
                    @*  @if (compareOnId == 17 && numberToCompare == "2")
                {
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate2">Second @DateName Start Date</RadzenText>
                <RadzenDatePicker Min="dateRangeStart.AddDays(-1)" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedStartDate2" />
                </RadzenCard>
                </div>
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name="2nd EndDate">@DateName End Date</RadzenText>
                <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedEndDate2" />
                </RadzenCard>
                </div>

                }
                @if (compareOnId == 17 && numberToCompare == "3")
                {
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate2">2nd @DateName Start Date</RadzenText>
                <RadzenDatePicker Min="dateRangeStart.AddDays(-1)" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedStartDate2" />
                </RadzenCard>
                </div>
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name=" EndDate2">2nd @DateName End Date</RadzenText>
                <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedEndDate2" />
                </RadzenCard>
                </div>
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name=" StartDate3"> 3rd @DateName Start Date </RadzenText>
                <RadzenDatePicker Min="dateRangeStart.AddDays(-1)" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedStartDate3" />
                </RadzenCard>
                </div>
                <div class="col-lg-6 col-xl-4 p-3">

                <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" Name="Transaction EndDate">3rd @DateName End Date</RadzenText>
                <RadzenDatePicker Min="dateRangeStart" Max="DateTime.Today"
                Class="w-100"
                @bind-Value="selectedEndDate3" />
                </RadzenCard>
                </div>
                }*@
                </div>
            </div>
        </RadzenTemplateForm>



    </container>
}

@code {





    List<Domain> domainsList = new List<Domain>();
    List<string> numberList = new List<string>();
    List<ComparedOn> CompareOnList = new List<ComparedOn>();
    ComparedOn _comparedOn = new ComparedOn();
    int compareOnId;
    string numberToCompare;
    string dateType;
    string str1;
    string str2;
    string str3;
    string DateName;
    List<string> FL1 = new List<string>();
    List<string> FL2 = new List<string>();
    List<string> FL3 = new List<string>();
    bool spinner;

    RunReport _storedReport1 = new RunReport();

    RunReport report = new RunReport();
    int selectedDomId = 0;
    int selectedDomId2 = 0;
    int selectedDomId3 = 0;
    int selectedDeptId = 0;
    int selectedDeptId2 = 0;
    int selectedDeptId3 = 0;
    int selectedCatId = 0;
    int selectedCatId2 = 0;
    int selectedCatId3 = 0;
    int selectedSubCatId = 0;
    int selectedSubCatId2 = 0;
    int selectedSubCatId3 = 0;
    int selectedItemid = 0;
    int selectedItemid2 = 0;
    int selectedItemid3 = 0;
    int selectedNominalCodeId = 0;
    int selectedNominalCodeId2 = 0;
    int selectedNominalCodeId3 = 0;
    int selectedSellingPriceId = 0;
    int selectedSellingPriceId2 = 0;
    int selectedPaymentTypeId = 0;
    int selectedPaymentTypeId2 = 0;
    int selectedPaymentTypeId3 = 0;
    int selectedDiscountId = 0;
    int selectedDiscountId2 = 0;
    int selectedDiscountId3 = 0;
    int selectedTillid = 0;
    int selectedTillid2 = 0;
    int selectedTillid3 = 0;
    int selectedClerkId = 0;
    int selectedClerkId2 = 0;
    int selectedClerkId3 = 0;
    DateTime selectedStartDate;
    DateTime selectedEndDate;
    DateTime selectedStartDate2;
    DateTime selectedEndDate2;
    DateTime selectedStartDate3;
    DateTime selectedEndDate3;


    Domain _domain = new Domain();
    List<Department> departmentsList = new List<Department>();
    Department _department = new Department();
    List<Category> categoriesList = new List<Category>();
    Category _category = new Category();
    List<SubCategory> subCategoriesList = new List<SubCategory>();
    SubCategory _subCategory = new SubCategory();
    List<Item> itemsList = new List<Item>();
    Item _item = new Item();
    List<NominalCode> nominalCodesList = new List<NominalCode>();
    NominalCode _nominalCode = new NominalCode();
    List<Discount> discountsList = new List<Discount>();
    Discount _discount = new Discount();
    List<Status> statusesList = new List<Status>();
    Status _status = new Status();
    List<PaymentType> paymentTypeList = new List<PaymentType>();
    PaymentType _paymentType = new PaymentType();
    List<Till> tillList = new List<Till>();
    Till _till = new Till();
    List<Clerk> clerkList = new List<Clerk>();
    Clerk _clerk = new Clerk();
    DateTime dateRangeStart;
    DateTime? value = DateTime.Now;
    DateTime[] dates;// = new List<DateTime>();

    List<string> dateTypesList = new List<string>();


    protected override void OnInitialized()
    {
        // DomainList = new List<Domain>();
        numberToCompare = "";
        dateType = "Transaction";
        DateName = "Transaction";
        dateRangeStart = new DateTime();
    }

    protected override async Task OnInitializedAsync()
    {

        //  var getData = await _PopulateDropdownService.Cat();

        numberList.Add("1");
        numberList.Add("2");
        numberList.Add("3");


        CompareOnList = await _ComparedOnService.GetComparedOnsAsync();

        dateTypesList.Add("Booking Date");
        dateTypesList.Add("Visit Date");

        domainsList = await _populateDropdownService.GetDomains();
        domainsList = domainsList.OrderByDescending(c => c.DomainName).ToList();

        tillList = await _populateDropdownService.GetTills();
        paymentTypeList = await _populateDropdownService.GetPaymentTypes();

        //getting earliest date in transaction data
        dateRangeStart = await _populateDropdownService.getDateStart();
        dateRangeStart.AddDays(-1);
        DateTime today = DateTime.Now;
        TimeSpan daysMinus = today - dateRangeStart;
        dates = new DateTime[] { DateTime.Today.AddDays(-daysMinus.Days), DateTime.Today.AddDays(1) };
        spinner = true;

        bool check = false;

    }

    protected async Task OnChangeDomain(object value)
    {
        departmentsList = await _populateDropdownService.GetDepartmentsinDomain(selectedDomId);
        departmentsList = departmentsList.OrderBy(c => c.DepartmentName).ToList();
        discountsList = await _populateDropdownService.GetDiscoutDescpriptionInDomain(selectedDomId);
        discountsList = discountsList.OrderBy(c => c.DiscountDescription).ToList();
        clerkList = await _populateDropdownService.GetClerks(selectedDomId);
        clerkList = clerkList.OrderBy(c => c.ClerkName).ToList();
    }

    protected async Task OnChangeDepartment(object value)
    {
        categoriesList = await _populateDropdownService.GetCategoriesInDepartment(selectedDeptId);
        categoriesList = categoriesList.OrderBy(c => c.CategoryName).ToList();
    }

    protected async Task OnChangeCategory(object value)
    {
        subCategoriesList = await _populateDropdownService.GetSubCategoriesInCatagories(selectedCatId);
        subCategoriesList = subCategoriesList.OrderBy(c => c.SubCategoryName).ToList();
    }
    protected async Task OnChangeSubCat(object value)
    {
        itemsList = await _populateDropdownService.GetIteminSubCat(selectedSubCatId);
        itemsList = itemsList.OrderBy(c => c.ItemDescription).ToList();

    }

    void OnChangeDateType()
    {
        if (dateType == "")
        {
            dateType = "Transaction";
            DateName = dateType;
        }
        else
        {
            DateName = dateType;
        }

    }

    void DateRenderSpecial(DateRenderEventArgs args)
    {
        {
            if (dates.Contains(args.Date))
                args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || dates.Contains(args.Date);
    }

    void OnTodayClick()
    {
        value = DateTime.Now;
    }


    async Task OnSubmit()
    {


        //if (selectedDomId == 0)
        //{
        //    // send error must select a domain
        //}
        //if (selectedStartDate == DateTime.MinValue)
        //{
        //    // send error - please select a start date
        //}
        //if (selectedEndDate == DateTime.MinValue)
        //{
        //    // send error - please select an end date
        //}
        //if (numberToCompare == "1")
        //{

        //    @StoreReport()
        //    ;
        //}
        //if(numberToCompare == "1")
        //{
        //    _storedReport1. = selectedDomId.;
        //    _storedReport1.CategoryId = selectedCatId;


        //}

        //check what not required parameters are enter
        //if (numberToCompare == "1")
        //{
        //     switch(selectedCatId, selectedSubCatId, selectedItemid, selectedDiscountId,  selectedNominalCodeId, selectedClerkId, selectedPaymentTypeId, selectedTillid)
        //      {
        //      case (0,0,0,0,0,0,0,0):
        //        // code block

        //        break;
        //      case (>0,0,0,0,0,0,0,0):
        //        // code block
        //        break;
        //        case (>0,>0,0,0,0,0,0,0):
        //        // code block
        //        break;
        //        case (>0,>0,0,0,0,0,0,0):
        //        // code block
        //        break;
        //        case (>0,>0,>0,>0,>0,>0,>0,>0):
        //        // code block
        //        break;
        //      default:
        //        // code block
        //        break;
        //        }



        //var result = await _getProductionService.GetAllTransByDomainAsyncbyDate(selectedDomId, selectedStartDate, selectedEndDate);
    }


}
