@*@page "/Views/ChartPop/{Id:int?}"*@
@page "/Views/ReportPop"
@using ClosedXML.Excel;
@using OTBIS.Web.Services
@using ClosedXML
@using ClosedXML.Report

@inject StoreReportService _storeReportService;
@inject MyStateContainer MyStateContainer
@inject MyStateContainer2 MyStateContainer2
@inject MyStateContainer3 MyStateContainer3
@inject GetProductionService _getProductionService;
@inject GetDomainDataService _getReportDataService;
@inject GetChartDataService _getChartDataService;
@inject NavigationManager navigationManager;
@inject IJSRuntime js


<row>
        <div class="rep text-center">
            <h1>REPORT</h1>
        </div>
    </row>



@if (dataListTBD != null && dataListTBD2 == null && dataListTBD3 == null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDate(@name, "excel"))" class="mb-4 me-2" />

<RadzenDataGrid @ref="gridByDate" Data="@dataListTBD" TItem="TransByDate"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">

    <Columns>
              
        <RadzenDataGridColumn TItem="TransByDate" Property="TransDate" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
        <RadzenDataGridColumn TItem="TransByDate" Property="TransCount" Title="Count" />
        <RadzenDataGridColumn TItem="TransByDate" Property="Net_Value" Title="Net" />
        <RadzenDataGridColumn TItem="TransByDate" Property="Vat_Value" Title="Vat"  />
        <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Value" Title="Gross Value"  />
        <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Sale_Value" Title="Sale Value" />
        <RadzenDataGridColumn TItem="TransByDate" Property="Discount_Value" Title="Discount" />
        
    </Columns>
</RadzenDataGrid>
}
@if (dataListTBD != null && dataListTBD2 != null && dataListTBD3 == null)

{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDate(@name, "excel"))" class="mb-4 me-2" />
    
    <RadzenDataGrid Data="@mergedListTBD2" TItem="TransByDate"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByDate" Property="TransByDateId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />

            <RadzenDataGridColumn TItem="TransByDate" Property="TransDate" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByDate" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBD != null && dataListTBD2 != null && dataListTBD3 != null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDate(@name, "excel"))" class="mb-4 me-2" />
    
    <RadzenDataGrid Data="@mergedListTBD3" TItem="TransByDate"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByDate" Property="TransByDateId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />

            <RadzenDataGridColumn TItem="TransByDate" Property="TransDate" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByDate" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByDate" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBM != null && dataListTBM2 == null && dataListTBM3 == null) 
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByMonth(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@dataListTBM" TItem="TransByMonth"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
       
            <RadzenDataGridColumn TItem="TransByMonth" Property="Month" Title="Date" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBM != null && dataListTBM2 != null && dataListTBM3 == null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByMonth(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBM2" TItem="TransByMonth" AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
          
            <RadzenDataGridColumn TItem="TransByMonth" Property="Month" Title="Month" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBM != null && dataListTBM2 != null && dataListTBM3 != null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDept(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBM3" TItem="TransByMonth" AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
          
            <RadzenDataGridColumn TItem="TransByMonth" Property="Month" Title="Date" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByMonth" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (datalistTBDept != null && datalistTBDept2 == null && datalistTBDept3 == null)
{
   <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDept(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@datalistTBDept" TItem="TransByDept" AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByDept" Property="TransByDateId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />

            <RadzenDataGridColumn TItem="TransByDept" Property="DepartmentId" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByDept" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (datalistTBDept != null && datalistTBDept2 != null && datalistTBDept3 == null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDept(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBDept2" TItem="TransByDept" AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByDept" Property="TransByDateId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByDept" Property="DepartmentId" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByDept" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (datalistTBDept != null && datalistTBDept2 != null && datalistTBDept3 != null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByDept(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBDept3" TItem="TransByDept"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByDept" Property="TransByDateId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByDept" Property="DepartmentId" Title="Date" FormatString="{0:d}" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByDept" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByDept" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBCat != null && dataListTBCat2 == null && dataListTBCat3 == null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@dataListTBCat" TItem="TransByCat"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByCat" Property="CategoryId" Title="CategoryId"  />
            <RadzenDataGridColumn TItem="TransByCat" Property="Category" Title="Category" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBCat != null && dataListTBCat2 != null && dataListTBCat3 == null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBCat3" TItem="TransByCat"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByCat" Property="CategoryId" Title="CategoryId"  />
            <RadzenDataGridColumn TItem="TransByCat" Property="Category" Title="Category" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBCat != null && dataListTBCat2 != null && dataListTBCat3 != null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBCat3" TItem="TransByCat"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByCat" Property="CategoryId" Title="CategoryId"  />
            <RadzenDataGridColumn TItem="TransByCat" Property="Category" Title="Category" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBSubCat != null && dataListTBSubCat2 == null && dataListTBSubCat3 == null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportBySubCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@dataListTBSubCat" TItem="TransBySubCat"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransBySubCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategoryId" Title="SubCategoryId" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategory" Title="SubCategory" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBSubCat != null && dataListTBSubCat2 != null && dataListTBSubCat3 == null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportBySubCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBSubCat2" TItem="TransBySubCat" AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransBySubCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategoryId" Title="SubCategoryId" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategory" Title="SubCategory" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBSubCat != null && dataListTBSubCat2 != null && dataListTBSubCat3 != null)
{
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportBySubCat(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBSubCat3" TItem="TransBySubCat"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransBySubCat" Property="TransByCatId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategoryId" Title="SubCategoryId" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="SubCategory" Title="SubCategory" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransBySubCat" Property="Discount_Value" Title="Discount" />

        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBItem != null && dataListTBItem2 == null && dataListTBItem3 == null)
{
 <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByItem(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@dataListTBItem" TItem="TransByItem"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByItem" Property="TransByItemId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByItem" Property="ItemId" Title="ItemId" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Item" Title="Item" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByItem" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Discount_Value" Title="Discount" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Domain" Title="Domain" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Category" Title="Category" />
            <RadzenDataGridColumn TItem="TransByItem" Property="SubCategory" Title="SubCategory" />
        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBItem != null && dataListTBItem2 != null && dataListTBItem3 == null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByItem(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBItem2" TItem="TransByItem"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByItem" Property="TransByItemId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />

            <RadzenDataGridColumn TItem="TransByItem" Property="ItemId" Title="ItemId" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Item" Title="Item" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByItem" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Discount_Value" Title="Discount" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Domain" Title="Domain" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Category" Title="Category" />
            <RadzenDataGridColumn TItem="TransByItem" Property="SubCategory" Title="SubCategory" />
        </Columns>
    </RadzenDataGrid>
}
@if (dataListTBItem != null && dataListTBItem2 != null && dataListTBItem3 != null)
{
     <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => ExportByItem(@name, "excel"))" class="mb-4 me-2" />
    <RadzenDataGrid Data="@mergedListTBItem2" TItem="TransByItem"  AllowVirtualization="true" Style="height:500px"
                AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                AllowPaging="true" PageSize="10"
                AllowSorting="true" ColumnWidth="100px" AllowColumnPicking="true">
        <Columns>
            <RadzenDataGridColumn Visible="@idVisable" TItem="TransByItem" Property="TransByItemId" Title="ID" Width="80px" TextAlign="TextAlign.Center" Frozen="true" />



            <RadzenDataGridColumn TItem="TransByItem" Property="ItemId" Title="ItemId" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Item" Title="Item" SortOrder="SortOrder.Ascending" />
            <RadzenDataGridColumn TItem="TransByItem" Property="TransCount" Title="Count" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Net_Value" Title="Net" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Vat_Value" Title="Vat" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Value" Title="Gross Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Gross_Sale_Value" Title="Sale Value" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Discount_Value" Title="Discount" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Domain" Title="Domain" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Department" Title="Department" />
            <RadzenDataGridColumn TItem="TransByItem" Property="Category" Title="Category" />
            <RadzenDataGridColumn TItem="TransByItem" Property="SubCategory" Title="SubCategory" />
        </Columns>
    </RadzenDataGrid>


}
@code {

    ModelList _modelList;
    List<TransByDate>? dataListTBD;
    List<TransByMonth>? dataListTBM;
    List<TransByDept>? datalistTBDept;
    List<TransByCat>? dataListTBCat;
    List<TransBySubCat>? dataListTBSubCat;
    List<TransByItem>? dataListTBItem;

    ModelList _modelList2;
    List<TransByDate>? dataListTBD2;
    List<TransByMonth>? dataListTBM2;
    List<TransByDept>? datalistTBDept2;
    List<TransByCat>? dataListTBCat2;
    List<TransBySubCat>? dataListTBSubCat2;
    List<TransByItem>? dataListTBItem2;

    ModelList _modelList3;
    List<TransByDate>? dataListTBD3;
    List<TransByMonth>? dataListTBM3;
    List<TransByDept>? datalistTBDept3;
    List<TransByCat>? dataListTBCat3;
    List<TransBySubCat>? dataListTBSubCat3;
    List<TransByItem>? dataListTBItem3;

    List<TransByDate>? mergedListTBD2;
    List<TransByMonth>? mergedListTBM2;
    List<TransByDept>? mergedListTBDept2;
    List<TransByCat>? mergedListTBCat2;
    List<TransBySubCat>? mergedListTBSubCat2;
    List<TransByItem>? mergedListTBItem2;

    List<TransByDate>? mergedListTBD3;
    List<TransByMonth>? mergedListTBM3;
    List<TransByDept>? mergedListTBDept3;
    List<TransByCat>? mergedListTBCat3;
    List<TransBySubCat>? mergedListTBSubCat3;
    List<TransByItem>? mergedListTBItem3;

    string name = "";

    RadzenDataGrid<TransByDate> gridByDate;
    RadzenDataGrid<TransByMonth> gridByMonth;
    RadzenDataGrid<TransByDept> gridByDept;
    RadzenDataGrid<TransByCat> gridByCat;
    RadzenDataGrid<TransBySubCat> gridBySubCat;
    RadzenDataGrid<TransByItem> gridByItem;

    bool idVisable = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _modelList = MyStateContainer.Value;

        dataListTBD = _modelList?.transByDatesList;

        dataListTBM = _modelList?.transByMonthList;

        datalistTBDept = _modelList?.transByDeptList;

        dataListTBCat = _modelList?.transByCatList;

        dataListTBSubCat = _modelList?.transBySubCatList;

        dataListTBItem = _modelList?.transByItemList;

        _modelList2 = MyStateContainer2.Value;

        dataListTBD2 = _modelList2?.transByDatesList;

        dataListTBM2 = _modelList2?.transByMonthList;

        datalistTBDept2 = _modelList2?.transByDeptList;    

        dataListTBCat2 = _modelList2?.transByCatList;

        dataListTBSubCat2 = _modelList2?.transBySubCatList;

        dataListTBItem2 = _modelList2?.transByItemList;

        _modelList3 = MyStateContainer3.Value; 

        dataListTBD3 = _modelList3?.transByDatesList;

        dataListTBM3 = _modelList3?.transByMonthList;

        datalistTBDept3 = _modelList3?.transByDeptList;    

        dataListTBCat3 = _modelList3?.transByCatList;

        dataListTBSubCat3 = _modelList3?.transBySubCatList;

        dataListTBItem3 = _modelList3?.transByItemList;

        mergedListTBD2 = new List<TransByDate>();
        mergedListTBM2 = new List<TransByMonth>();
        mergedListTBDept2 = new List<TransByDept>();
        mergedListTBCat2 = new List<TransByCat>();
        mergedListTBSubCat2 = new List<TransBySubCat>();
        mergedListTBItem2 = new List<TransByItem>();

        mergedListTBD3 = new List<TransByDate>();
        mergedListTBM3 = new List<TransByMonth>();
        mergedListTBDept3 = new List<TransByDept>();
        mergedListTBCat3 = new List<TransByCat>();
        mergedListTBSubCat3 = new List<TransBySubCat>();
        mergedListTBItem3 = new List<TransByItem>();



        if(dataListTBD != null && dataListTBD2 != null && dataListTBD3 == null)
        {
            mergedListTBD2.AddRange(dataListTBD);
            mergedListTBD2.AddRange(dataListTBD2);

        }
        if (dataListTBM != null && dataListTBM2 != null && dataListTBM3 == null)
        {
            mergedListTBM2.AddRange(dataListTBM);
            mergedListTBM2.AddRange(dataListTBM2);

        }
        if (datalistTBDept2 != null && datalistTBDept != null && datalistTBDept3 == null)
        {
            mergedListTBDept2.AddRange(datalistTBDept);
            mergedListTBDept2.AddRange(datalistTBDept2);

        }
        if (dataListTBCat2 != null && dataListTBCat != null && dataListTBCat3 == null)
        {

            mergedListTBCat2.AddRange(dataListTBCat);
            mergedListTBCat2.AddRange(dataListTBCat2);
        }
        if (dataListTBSubCat != null && dataListTBSubCat2 != null && dataListTBSubCat3 == null)
        {

            mergedListTBSubCat2.AddRange(dataListTBSubCat);
            mergedListTBSubCat2.AddRange(dataListTBSubCat);

        }
        if (dataListTBItem != null && dataListTBItem2 != null && dataListTBItem3 == null)
        {
            mergedListTBItem2.AddRange(dataListTBItem);
            mergedListTBItem2.AddRange(dataListTBItem2);

        } 

        mergedListTBD3 = new List<TransByDate>();


        if (dataListTBD != null && dataListTBD2 != null && dataListTBD3 != null)
        {
            mergedListTBD3.AddRange(dataListTBD);
            mergedListTBD3.AddRange(dataListTBD2);
            mergedListTBD3.AddRange(dataListTBD3);

        }
        if (datalistTBDept2 != null && datalistTBDept != null && datalistTBDept3 != null)
        {
            mergedListTBDept3.AddRange(datalistTBDept);
            mergedListTBDept3.AddRange(datalistTBDept); 
            mergedListTBDept3.AddRange(datalistTBDept3);

        }
        if (dataListTBCat2 != null && dataListTBCat != null && dataListTBCat3 != null)
        {
            mergedListTBCat3.AddRange(dataListTBCat);
            mergedListTBCat3.AddRange(dataListTBCat2);
            mergedListTBCat3.AddRange(dataListTBCat3);
           
        }
        if (dataListTBSubCat != null && dataListTBSubCat2 != null && dataListTBSubCat3 != null)
        {
            mergedListTBSubCat3.AddRange(dataListTBSubCat);
            mergedListTBSubCat3.AddRange(dataListTBSubCat2);
            mergedListTBSubCat3.AddRange(dataListTBSubCat3);
            
        }
        if (dataListTBItem != null && dataListTBItem2 != null && dataListTBItem3 != null)
        {
            mergedListTBItem3.AddRange(dataListTBItem);
            mergedListTBItem3.AddRange(dataListTBItem2);
            mergedListTBItem3.AddRange(dataListTBItem3);

        }

    }

    public async void ExportByDate(string name, string type)
    {
        List<TransByDate> dataList = dataListTBD;

        if(dataListTBD2 != null)
        {
            dataList.AddRange(dataListTBD2);    
        }
        if (dataListTBD3 != null)
        {
            dataList.AddRange(dataListTBD3);
        }

        TransByDate[] dataArray =  dataList.ToArray();

        var xls = new Excel();
        await xls.ExportReportTBD(js, dataArray, "export.xlsx");

    }

    public async void ExportByMonth(string name, string type)
    {
        List<TransByMonth> dataList = dataListTBM;

        if(dataListTBM2 != null)
        {
            dataList.AddRange(dataListTBM2);    
        }
        if (dataListTBD3 != null)
        {
            dataList.AddRange(dataListTBM3);
        }

        TransByMonth[] dataArray =  dataList.ToArray();

        var xls = new Excel();
        await xls.ExportReportTBM(js, dataArray, "export.xlsx");

    }
    public async void ExportByDept(string name, string type)
    {
        List<TransByDept> dataList = datalistTBDept;

        if(datalistTBDept2 != null)
        {
            dataList.AddRange(datalistTBDept2);    
        }
        if (datalistTBDept3 != null)
        {
            dataList.AddRange(datalistTBDept3);
        }
        
        TransByDept[] dataArray =  dataList.ToArray();
        
        var xls = new Excel();
        await xls.ExportReportTBDept(js, dataArray, "export.xlsx");

    }
       
    public async void ExportByCat(string name, string type)
    {
        List<TransByCat> dataList = dataListTBCat;

        if(dataListTBCat2 != null)
        {
            dataList.AddRange(dataListTBCat2);    
        }
        if (dataListTBCat3 != null)
        {
            dataList.AddRange(dataListTBCat3);
        }
        
        TransByCat[] dataArrayCat =  dataList.ToArray();
        
        var xls = new Excel();
        await xls.ExportReportTBCat(js, dataArrayCat, "export.xlsx");

    }
        public async void ExportBySubCat(string name, string type)
    {
        List<TransBySubCat> dataList = dataListTBSubCat;

        if(dataListTBSubCat2 != null)
        {
            dataList.AddRange(dataListTBSubCat2);    
        }
        if (dataListTBSubCat3 != null)
        {
            dataList.AddRange(dataListTBSubCat3);
        }
        
        TransBySubCat[] dataArray =  dataList.ToArray();
        
        var xls = new Excel();
        await xls.ExportReportTBSubCat(js, dataArray, "export.xlsx");

    }
    public async void ExportByItem(string name, string type)
    {
        List<TransByItem> dataList = dataListTBItem;

        if (dataListTBItem2 != null)
        {
            dataList.AddRange(dataListTBItem2);
        }
        if (dataListTBItem3 != null)
        {
            dataList.AddRange(dataListTBItem3);
        }

        TransByItem[] dataArray = dataList.ToArray();

        var xls = new Excel();
        await xls.ExportReportTBItem(js, dataArray, "export.xlsx");

    }

    void PickedColumnsChanged()
    {
    }

}

    

    


