@*@page "/Views/ChartPop/{Id:int?}"*@
@page "/Views/ChartPop"
@inject MyStateContainer MyStateContainer
@inject MyStateContainer2 MyStateContainer2
@inject MyStateContainer3 MyStateContainer3
@inject GetProductionService _getProductionService;
@inject GetDomainDataService _getReportDataService;
@inject GetChartDataService _getChartDataService;
@inject GetSeriesName _getSeriesNameService;
@inject DialogService DialogService;
@using System.Globalization;
@using OTBIS.Web.Models.ChartArrays;
@inject GetProductionService _getProductionService;
@inject GetChartDataService _getChartDataService;
@inject NavigationManager _navigationManager;





<row>
     <div class="buffer row align-items-center text-center">
        <h1>Welcome to <spanO>OTBIS</spanO> Charts </h1>
    
    </div>
   
</row>
@if(
    dataArrayTBD == null &&
    dataArrayTBM == null &&
    dataArrayTBDept == null &&
    dataArrayTBCat == null &&
    dataArrayTBSubCat == null &&
    dataArrayTBItem == null &&

    dataArrayTBD2 == null &&
    dataArrayTBM2 == null &&
    dataArrayTBDept2 == null &&
    dataArrayTBCat2 == null &&
    dataArrayTBSubCat2 == null &&
    dataArrayTBItem2 == null &&

    dataArrayTBD3 == null &&
    dataArrayTBM3 == null &&
    dataArrayTBDept3 == null &&
    dataArrayTBCat3 == null &&
    dataArrayTBSubCat3 == null &&
    dataArrayTBItem3 == null 

)
{
    <div class="spinner"></div>
}
else {
@if (dataArrayTBD != null && dataArrayTBD2 == null && dataArrayTBD3 == null)
{
   
<div class="Container my-5">
    <div class="row">
        <div class="col">
            <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
            </RadzenCard>
            <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD" CategoryProperty="TransDate"  ValueProperty="Net_Value" RenderingOrder="1">
                    <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                    <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDate" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net_Value in GBP" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
        <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
    </div>
</div>
}
@if (dataArrayTBD != null && dataArrayTBD2 != null && dataArrayTBD3 == null)
{
   <div class="Container my-5">
    <div class="row">
        <div class="col">
            <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
            </RadzenCard>
            <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD" CategoryProperty="TransDate"  ValueProperty="Net_Value" RenderingOrder="1">
                    <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                    <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                </RadzenLineSeries>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD2" CategoryProperty="TransDate" ValueProperty="Net_Value" RenderingOrder="1">
                        <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                        <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                    </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDate" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net_Value in GBP" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
        <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
    </div>
</div>
}
@if (dataArrayTBD != null && dataArrayTBD2 != null && dataArrayTBD3 != null)
{
    <div class="Container my-5">
    <div class="row">
        <div class="col">
            <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
            </RadzenCard>
            <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD" CategoryProperty="TransDate" Title="@series1"  ValueProperty="Net_Value" RenderingOrder="1">
                    <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                    <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                </RadzenLineSeries>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD2" CategoryProperty="TransDate" Title=@series2 ValueProperty="Net_Value" RenderingOrder="1">
                        <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                        <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                    </RadzenLineSeries>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBD3" CategoryProperty="TransDate" Title=@series3 ValueProperty="Net_Value" RenderingOrder="1">
                        <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-secondary-dark)" LineType="LineType.Dashed" />
                        <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                        <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                    </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDate" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net Value in GBP" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
        <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
    </div>
</div>
}
@if (dataArrayTBM != null && dataArrayTBM2 == null && dataArrayTBM3 == null) 
{
   <div class="Container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard class="w-100 mb-4" >
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <h4>Auto-size bar series</h4>
            <RadzenChart SeriesClick=@OnSeriesClick style="height: 400px">
                        <RadzenBarSeries Data="@dataArrayTBM" CategoryProperty="Month" Title="@series1" LineType="LineType.Dashed" ValueProperty="Net_Value">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenBarSeries>
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net_Value in GBP" />
                </RadzenValueAxis>
                <RadzenBarOptions Radius="5" />
            </RadzenChart>
        </div>
      
    </div>
            <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
</div>
}

@if (dataArrayTBM != null && dataArrayTBM2 != null && dataArrayTBM3 == null)
{
    <div class="Container">
        <div class="row">
            <div class="col-sm-12 my-5">
                <RadzenCard class="w-100 mb-4">
                    <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                    <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
                </RadzenCard>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <h4>Auto-size bar series</h4>
                <RadzenChart SeriesClick=@OnSeriesClick style="height: 400px">
                    <RadzenBarSeries Data="@dataArrayTBM" CategoryProperty="Month" Title="@series1" LineType="LineType.Dashed" ValueProperty="Net_Value">
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </RadzenBarSeries>
                    <RadzenBarSeries Data="@dataArrayTBM2" CategoryProperty="Month" Title="@series2" ValueProperty="Net_Value">
                         <RadzenSeriesDataLabels Visible="@showDataLabels" />
                     </RadzenBarSeries>
                    <RadzenValueAxis Formatter="@FormatAsUK">
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Net_Value in GBP" />
                    </RadzenValueAxis>
                    <RadzenBarOptions Radius="5" />
                </RadzenChart>
            </div>

        </div>
        <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
    </div>
}

@if (dataArrayTBM != null && dataArrayTBM2 != null && dataArrayTBM3 != null)
{
     <div class="Container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard class="w-100 mb-4" >
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <h4>Auto-size bar series</h4>
            <RadzenChart SeriesClick=@OnSeriesClick style="height: 400px">
                <RadzenBarSeries Data="@dataArrayTBM" CategoryProperty="Month" Title="@series1" LineType="LineType.Dashed" ValueProperty="Net_Value">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenBarSeries>
                <RadzenBarSeries Data="@dataArrayTBM2" CategoryProperty="Month" Title="@series2" ValueProperty="Net_Value">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenBarSeries>
                    <RadzenBarSeries Data="@dataArrayTBM3" CategoryProperty="Month" Title="@series3" ValueProperty="Net_Value">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenBarSeries>
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net_Value in GBP net" />
                </RadzenValueAxis>
                <RadzenBarOptions Radius="5" />
            </RadzenChart>
        </div>
      
    </div>
            <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
</div>
}

@if (dataArrayTBDept != null && dataArrayTBDept2 == null && dataArrayTBDept3 == null)
{
      <div class="Container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard Class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <h4>Auto-size column series</h4>
            <RadzenChart>
                        <RadzenColumnSeries  Data="@dataArrayTBDept" CategoryProperty="DepartmentId" Title=@series1 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                
                <RadzenColumnOptions Radius="5" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Revenue in GBP" />
                </RadzenValueAxis>
            </RadzenChart>

        </div>
    </div>
    <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
</div>

}
@if (dataArrayTBDept != null && dataArrayTBDept2 != null && dataArrayTBDept3 == null)
{
    
      <div class="Container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard Class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <h4>Auto-size column series</h4>
            <RadzenChart>
                <RadzenColumnSeries Data="@dataArrayTBDept" CategoryProperty="DepartmentId" Title=@series1 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                <RadzenColumnSeries Data="@dataArrayTBDept2" CategoryProperty="DepartmentId" Title=@series2 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                
                <RadzenColumnOptions Radius="5" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Revenue in GBP" />
                </RadzenValueAxis>
            </RadzenChart>

        </div>
    </div>
    <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
</div>
}
@if (dataArrayTBDept != null && dataArrayTBDept2 != null && dataArrayTBDept3 != null)
{
         <div class="Container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenCard Class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <h4>Auto-size column series</h4>
            <RadzenChart>
                <RadzenColumnSeries Data="@dataArrayTBDept" CategoryProperty="DepartmentId" Title=@series1 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                <RadzenColumnSeries Data="@dataArrayTBDept2" CategoryProperty="DepartmentId" Title=@series2 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                <RadzenColumnSeries Data="@dataArrayTBDept3" CategoryProperty="DepartmentId" Title=@series3 LineType="LineType.Dashed" ValueProperty="Net_Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenColumnSeries>
                
                <RadzenColumnOptions Radius="5" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Revenue in GBP" />
                </RadzenValueAxis>
            </RadzenChart>

        </div>
    </div>
    
    <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
</div>

}

@if (dataArrayTBCat != null && dataArrayTBCat2 == null && dataArrayTBCat3 == null)
{
        <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat" CategoryProperty="CategoryId" Title=@series1 ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsCat" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}
@if (dataArrayTBCat != null && dataArrayTBCat2 != null && dataArrayTBCat3 == null)
{<div class="Container my-5">
    <div class="row">
        <div class="col">
            <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
            </RadzenCard>
            <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat" CategoryProperty="CategoryId" Title=@series1 ValueProperty="Net_Value" RenderingOrder="1">
                    <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                    <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                </RadzenLineSeries>

                <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat2" CategoryProperty="CategoryId" Title=@series2 ValueProperty="Net_Value" RenderingOrder="1">
                    <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                    <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                    <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                </RadzenLineSeries>

                <RadzenCategoryAxis Padding="20" Formatter="@FormatAsCat" />
                <RadzenValueAxis Formatter="@FormatAsUK">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Net_Value in GBP" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
        <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
    </div>
</div>
}
@if (dataArrayTBCat != null && dataArrayTBCat2 != null && dataArrayTBCat3 != null)
{
        <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat" CategoryProperty="CategoryId" Title=@series1 ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat2" CategoryProperty="CategoryId" Title=@series2 ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat3" CategoryProperty="CategoryId" Title=@series3 ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-secondary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsCat" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}

@if (dataArrayTBSubCat != null && dataArrayTBSubCat2 == null && dataArrayTBSubCat3 == null)
{    <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBSubCat" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                      <RadzenCategoryAxis Padding="20" Formatter="@FormatAsSubCat" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}
@if (dataArrayTBSubCat != null && dataArrayTBSubCat2 != null && dataArrayTBSubCat3 == null)
{
       <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBCat" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBSubCat2" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                      
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsSubCat" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}
@if (dataArrayTBSubCat != null && dataArrayTBSubCat2 != null && dataArrayTBSubCat3 != null)
{
       <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBSubCat" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBSubCat2" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBSubCat3" CategoryProperty="SubCategory" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-secondary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsSubCat" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}

@if (dataArrayTBItem != null && dataArrayTBItem2 == null && dataArrayTBItem3 == null)
{
   <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                     
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsItem" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}
@if (dataArrayTBItem != null && dataArrayTBItem2 != null && dataArrayTBItem3 == null)
{
     <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem2" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>
                        
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsItem" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
}
@if (dataArrayTBItem != null && dataArrayTBItem2 != null && dataArrayTBItem3 != null)
{
     <div class="Container my-5">
            <div class="row">
                <div class="col">
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                        <RadzenCheckBox @bind-Value="@trend" Name="trend"></RadzenCheckBox>
                        <RadzenLabel Text="Trend" For="trend" Style="margin-right: 1rem;" class="rz-color-danger-dark" />
                        <RadzenCheckBox @bind-Value="@median" Name="median"></RadzenCheckBox>
                        <RadzenLabel Text="Median" For="median" Style="margin-right: 1rem;" class="rz-color-success-dark" />
                        <RadzenCheckBox @bind-Value="@mean" Name="mean"></RadzenCheckBox>
                        <RadzenLabel Text="Mean" For="mean" Style="margin-right: 1rem;" class="rz-color-info-dark" />
                        <RadzenCheckBox @bind-Value="@mode" Name="mode"></RadzenCheckBox>
                        <RadzenLabel Text="Mode" For="mode" class="rz-color-warning-darker" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-danger-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem2" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-primary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenLineSeries Smooth="true" Data="@dataArrayTBItem3" CategoryProperty="Item" ValueProperty="Net_Value" RenderingOrder="1">
                            <RadzenSeriesTrendLine Visible="@trend" Stroke="var(--rz-secondary-dark)" LineType="LineType.Dashed" />
                            <RadzenSeriesMedianLine Visible="@median" Stroke="var(--rz-success-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesMeanLine Visible="@mean" Stroke="var(--rz-info-dark)" LineType="LineType.Dotted" />
                            <RadzenSeriesModeLine Visible="@mode" Stroke="var(--rz-warning-darker)" LineType="LineType.Dotted" />
                        </RadzenLineSeries>

                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsItem" />
                        <RadzenValueAxis Formatter="@FormatAsUK">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Net_Value in GBP" />
                        </RadzenValueAxis>
                    </RadzenChart>
                </div>
                <RadzenButton Variant="Variant.Flat" Shade="Shade.Lighter" Click=@(args => OnClickMore()) Text="More" ButtonStyle="ButtonStyle.Primary" />
            </div>
        </div>
    }
    

}
@code {

    ModelList _modelList;
    TransByDate[] dataArrayTBD;
    TransByMonth[] dataArrayTBM;
    TransByDept[] dataArrayTBDept;
    TransByCat[] dataArrayTBCat;
    TransBySubCat[] dataArrayTBSubCat;
    TransByItem[]dataArrayTBItem;

    ModelList _modelList2 = new ModelList();
    TransByDate[] dataArrayTBD2;
    TransByMonth[] dataArrayTBM2;
    TransByDept[] dataArrayTBDept2;
    TransByCat[] dataArrayTBCat2;
    TransBySubCat[] dataArrayTBSubCat2;
    TransByItem[] dataArrayTBItem2;

    ModelList _modelList3= new ModelList();
    TransByDate[] dataArrayTBD3;
    TransByMonth[] dataArrayTBM3;
    TransByDept[] dataArrayTBDept3;
    TransByCat[] dataArrayTBCat3;
    TransBySubCat[] dataArrayTBSubCat3;
    TransByItem[]dataArrayTBItem3;

    DateTime yearRange;

    bool trend = true;
    bool median = false;
    bool mean = false;
    bool mode = false;


    int id;
    DateTime tranDate;
    int count;
    decimal net;
    decimal vat;
    decimal gross;
    decimal saleV;
    decimal discount;

    bool showDataLabels = false;
    bool idVisable = false;

    string series1="";
    string series2;
    string series3; 

    IEnumerable<ColorScheme> colorSchemes = Enum.GetValues(typeof(ColorScheme)).Cast<ColorScheme>();
    ColorScheme colorScheme = ColorScheme.Palette;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        _modelList = MyStateContainer.Value;
        if(_modelList.series != "")
        {
            series1 = _modelList.series;
        }

        if(_modelList?.transByDatesList !=null)
        {
            dataArrayTBD = _modelList?.transByDatesList.ToArray();

        }

        if(_modelList?.transByMonthList != null)
        {
            dataArrayTBM = _modelList?.transByMonthList.ToArray();  

        }
        if(_modelList?.transByDeptList != null)
        {
            dataArrayTBDept = _modelList?.transByDeptList.ToArray();

        }

        if(_modelList?.transByCatList != null)
        {
            dataArrayTBCat = _modelList?.transByCatList.ToArray();  
        }

        if (_modelList?.transBySubCatList != null)
        {
            dataArrayTBSubCat = _modelList?.transBySubCatList.ToArray();  
        }
        if (_modelList?.transByItemList != null)
        {

            dataArrayTBItem = _modelList?.transByItemList.ToArray();
        }

        _modelList2 = MyStateContainer2.Value;
        if(_modelList2.series!= null )
        {
            series2 = _modelList2.series;
        }


        if (_modelList2?.transByDatesList != null)
        {
            dataArrayTBD2 = _modelList2?.transByDatesList.ToArray();
        }
        if (_modelList2?.transByMonthList != null)
        {
            dataArrayTBM2 = _modelList2?.transByMonthList.ToArray();
        }
        if (_modelList2?.transByDeptList != null)
        {
            dataArrayTBDept2 = _modelList2?.transByDeptList.ToArray();
        }

        if (_modelList2?.transByCatList != null)
        {
            dataArrayTBCat2 = _modelList2?.transByCatList.ToArray();
        }

        if (_modelList2?.transBySubCatList != null)
        {
            dataArrayTBSubCat2 = _modelList2?.transBySubCatList.ToArray();
        }
        if (_modelList2?.transByItemList != null)
        {

            dataArrayTBItem2 = _modelList2?.transByItemList.ToArray();
        }


        _modelList3 = MyStateContainer3.Value;

        if(_modelList3?.series!= null)
        {
            series3 = _modelList3.series;
        }


        if (_modelList3?.transByDatesList != null)
        {
            dataArrayTBD3 = _modelList3?.transByDatesList.ToArray();
        }
        if (_modelList3?.transByMonthList != null)
        {
            dataArrayTBM3 = _modelList3?.transByMonthList.ToArray();
        }
        if (_modelList3?.transByDeptList != null)
        {
            dataArrayTBDept3 = _modelList3?.transByDeptList.ToArray();
        }

        if (_modelList3?.transByCatList != null)
        {
            dataArrayTBCat3 = _modelList3?.transByCatList.ToArray();
        }

        if (_modelList3?.transBySubCatList != null)
        {
            dataArrayTBSubCat3 = _modelList3?.transBySubCatList.ToArray();
        }
        if (_modelList3?.transByItemList != null)
        {

            dataArrayTBItem3 = _modelList3?.transByItemList.ToArray();
        }

    }
    string FormatAsDate(object value)
    {
        if (value != null)

        {
            return Convert.ToDateTime(value).ToString("d");
        }

        return string.Empty;
    }

    string FormatAsMonth(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("yy-MMM");
        }

        return string.Empty;
    }
    string FormatAsDept(object value)
    {
        if (value != null)

        {
            string dept = "";
            if(dataArrayTBDept[1]== value)
            {
                return dept = dataArrayTBDept[2].Department.ToString();
            }


        }

        return string.Empty;
    }
    string FormatAsCat(object value)
    {
        if (value != null)

        {
           //return await(_getSeriesNameService.GetSeriesCatName(value));
             //   return dataArrayTBCat[2].Category.ToString();
            //  return Convert.ToDateTime(value).ToString("d");
        }

        return string.Empty;
    }

    string FormatAsSubCat(object value)
    {
        if (value != null)

        {
            
           // return await(_getSeriesNameService.GetSeriesCatName(value.));
            //  return Convert.ToDateTime(value).ToString("d");
        }

        return string.Empty;
    }
    string FormatAsItem(object value)
    {
        if (value != null)
       
        {
            return dataArrayTBItem[2].ToString();
            //  return Convert.ToDateTime(value).ToString("d");
        }

        return string.Empty;
    }

    string FormatAsUK(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-GB"));
    }
    void PickedColumnsChanged(DataGridPickedColumnsChangedEventArgs<TransByDate> args)
    {
    }
     void OnSeriesClick()
    {
        
    }

   async Task OnClickMore()
   {
       _navigationManager.NavigateTo("/Views/ReportPop");
   }

}

    

    


